/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode(int x) : val(x), next(NULL) {}
 * };
 */
ListNode* Solution::reverseBetween(ListNode* A, int B, int C) {
      if(A==NULL || A->next==NULL) return A;
   
   ListNode* dummy = new ListNode(-1);
    dummy->next = A;
    ListNode* prev = dummy;
    
    while(B>1){
        prev = prev -> next;
        B--;
        C--;
    }
    
    ListNode * curr = prev ->next;
    ListNode* tail = prev ->next;
    
    ListNode* temp = nullptr;
    while(C--){
        ListNode* forward = curr->next;
        curr->next = temp;
        temp = curr;
        curr = forward;
    }  
    
    tail->next = curr;
    prev->next = temp;
    
    return dummy->next;
}

