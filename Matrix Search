int Solution::searchMatrix(vector<vector<int> > &A, int B) {
     int n = A.size();
    int m = A[0].size();
    int rowstart = 0;
    int rowend = n - 1;
    int colstart = 0;
    int colend = m - 1;
    int rowmid, colmid;
    while(rowstart<=rowend && colstart<=colend){
        rowmid = (rowstart + rowend)/2;
        if(A[rowmid][colend]==B) return 1;
        else if(A[rowmid][colend]<B){
            rowstart = rowmid + 1;
        }
        else{
            if(A[rowmid][colstart]==B) return 1;
            if(A[rowmid][colstart]<B){
               colmid = (colstart + colend)/2;
               if(A[rowmid][colmid]==B) return 1;
               else if (A[rowmid][colmid]>B) colend = colmid - 1;
               else colstart = colmid + 1;
            }
            else{
                rowend = rowmid - 1;
            }
        }
    }
    return 0;
}
