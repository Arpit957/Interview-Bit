int Solution::canCompleteCircuit(const vector<int> &A, const vector<int> &B) {
    // O(nlog(n))
    // O(n)
    // O(log(n));
    // O(1)
    
    // !first case
    
    //second case
    int fuel  = 0;
    int start = 0;
    
    int cost = 0;
    int sum = 0;
    
    int n = A.size();
    
    for(int i = 0; i < n ; i++){
        cost = cost + (A[i] - B[i]);
        fuel = fuel + (A[i] - B[i]);
        if(fuel < 0){
            start = i + 1;
            fuel = 0;
        }
    }
    if(sum >= 0){
        return start % n;
    }
    return -1;
}
