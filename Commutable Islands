int Solution::solve(int A, vector<vector<int> > &B) {
    vector<pair<int,int>> adj[A+1];
    for(auto it:B){
        adj[it[0]].push_back({it[1],it[2]});
        adj[it[1]].push_back({it[0],it[2]});
    }
     priority_queue<pair<int,int>,vector<pair<int,int>>,greater<pair<int,int>>> pq;
     pq.push({0,1});
     int visited[A+1] = {0};
     int sum=0;
     while(!pq.empty()){
         auto it = pq.top();
         int node = it.second;
         int weight = it.first;
         pq.pop();
         if(!visited[node]){
         sum+=weight;
             visited[node] = 1;
             for(auto it:adj[node]){
                 if(!visited[it.first]){
                     pq.push({it.second,it.first});
                 }
             }
         }
     }
     return sum;
}
