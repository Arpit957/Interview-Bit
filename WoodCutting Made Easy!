int isPossible(vector<int> &A, int B,int temp_ans){
    long long int sum = 0;
    for(int i = 0; i < A.size() ; i++){
        if(A[i] <= temp_ans)continue;
        
        sum+=(A[i] - temp_ans);
    }
    return (sum >= B);
}

int Solution::solve(vector<int> &A, int B) {
    int low = 0;
    int high = *max_element(A.begin(),A.end());
    int ans = -1;
    while(low <= high){
        int mid = low + (high - low)/2;
        
        if(isPossible(A,B,mid)){
            ans = mid;
            low = mid + 1;
        }
        else{
             high = mid - 1;
        }
    }
    return ans;
}
