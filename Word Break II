bool contain(string A,vector<string> &B){
    for(int i=0;i<B.size();i++){
        if(B[i] == A){
            return true;
        }
    }
    return false;
}
void  solve(int idx, string A,vector<string> &B,int n,string temp,vector<string> &ans){
    if(idx==n){
        ans.push_back(temp.substr(0,temp.size()-1));
        return;
    }
    for(int i =idx;i<n;i++){
        if(contain(A.substr(idx,i-idx+1),B)){
            solve(i+1,A,B,n,temp + A.substr(idx,i-idx+1) + " ",ans);
        }
    }
}
vector<string> Solution::wordBreak(string A, vector<string> &B) {
     vector<string> ans;
    int n=A.size();
    solve(0,A,B,n,"",ans);
    sort(ans.begin(),ans.end());
    return ans;
}
