vector<int> Solution::subUnsort(vector<int> &A) {
    // vector<int>temp;
    // for(int i = 0 ; i < A.size() ; i++){
    //     temp.push_back(i+1);
    // }
    
    // int start = -1 ,end = -1;
    // for(int i = 0 ; i < A.size() ; i++){
    //     if(A[i] != temp[i]){
    //         if(start == -1){
    //             start = i;
    //         }
    //         end = i;
    //     }
    // }
    // if(start == -1)return {-1};
    // if(A[start] != A[end])
    // return {start,end};
    // else return {-1};
    
    vector<int>ans;
   
    int i=0;
    int j=A.size()-1;
   
    while(i<A.size()-1 && A[i]<=A[i+1]){
        i++;
    }
    while(j>0 && A[j]>=A[j-1] ){
        j--;
    }
   
    if(i==A.size()-1){
        ans.push_back(-1);
        return ans;
    }
    int minele=INT_MAX;
    int maxele=INT_MIN;
   
    for(int k=i;k<=j;k++){
        minele=min(minele,A[k]);
        maxele=max(maxele,A[k]);
    }
   
    int l=0;
    int r=A.size()-1;
   
    while(l<=i && A[l]<=minele){
        l++;
    }
   
    while(r>=j && A[r]>=maxele){
        r--;
    }
    ans.push_back(l);
    ans.push_back(r);
    return ans;
}
