/**
 * Definition for binary tree
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode(int x) : val(x), left(NULL), right(NULL) {}
 * };
 */
 TreeNode* solve(vector<int>&a,int i,int j){
     if( i == j)return new TreeNode(a[i]);
     if(i > j)return nullptr;
     
     int ind = -1;
     int maxi = INT_MIN;
     
     for(int k = i ; k <= j ; k++){
         if(a[k] > maxi){
             maxi = a[k];
             ind = k;
         }
     }
     TreeNode* root = new TreeNode(a[ind]);
     
     root ->left = solve(a, i , ind-1 );
     root->right = solve(a, ind+1 ,j );
     
     return root;
 }
TreeNode* Solution::buildTree(vector<int> &A) {
    int n = A.size();
    
    return solve(A,0,n-1);
}
