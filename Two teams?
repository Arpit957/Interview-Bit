int Solution::solve(int A, vector<vector<int> > &B) {
    vector<int>adj[A+1];
    for(auto it:B) {
        adj[it[0]].push_back(it[1]);
        adj[it[1]].push_back(it[0]);
    }
     int color[A+1];
    //initialise color as -1
    for(int i=0; i<A; i++) color[i]=-1;
    queue<int>q;
    
    for(int i = 0 ; i<A+1;i++){
        if(color[i] == -1){
            color[i] = 1;
            q.push(i);
        }
        
        while(!q.empty()){
            int node = q.front();
            q.pop();
            
            for(auto it:adj[node]){
                if(color[it] == color[node])return 0; 
            if(color[it] == -1){
                color[it] = 1 - color[node];
                q.push(it);
            }
         }
        }
    }
    return 1;
}
