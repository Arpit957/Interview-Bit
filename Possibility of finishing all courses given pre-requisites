int Solution::solve(int A, vector<int> &B, vector<int> &C) {

    vector<int>indegree(A+1,0);
    vector<int>adj[A+1];
    vector<int>vis(A+1,0);
    int n=B.size();
    for(int i=0;i<n;i++){
        int u=B[i];
        int v=C[i];
        adj[u].push_back(v);
        indegree[v]++;
    }
    queue<int>q;
    for(int i=1;i<=A;i++){
        if(indegree[i]==0)
         q.push(i);
    }
    int cnt=0;
    while(!q.empty()){
        auto curr=q.front();q.pop();
        vis[curr]=1;
        cnt++;
        for(auto neigh:adj[curr]){
            indegree[neigh]--;
         if(indegree[neigh]==0 and vis[neigh]==0){
                q.push(neigh);
            }
        }
       
    }
    if(cnt==A)return 1;
    else return 0;
}
